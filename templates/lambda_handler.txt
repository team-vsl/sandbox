# Import built-in libraries
import traceback
import os

# Import utils
import utils.exceptions as Exps
from utils.helpers import request as request_helpers
from utils.logger import get_logger
from utils.response_builder import ResponseBuilder

async def handler(event, context):
    rb = ResponseBuilder()
    logger = get_logger()

    try:
        # Extract request data
        claims = request_helpers.get_claims_from_event(event)
        path_params = request_helpers.get_path_params_from_event(event)
        body = request_helpers.get_body_from_event(event)

        # Return response
        rb.set_status_code(200)
        rb.set_data({})  # You can populate this with actual data

        return rb.create_response()
    
    except Exps.AppException as error:
        logger.error(f"Error | [handler]: {error}")
        return rb.create_error_response(error)

    except Exception as error:
        logger.error(f"Unknown error | [handler]: {error} {traceback.format_exc()}")
        return rb.create_error_response(Exps.UnknownException(str(error))

    finally:
        logger.debug("End execution of [handler]")
